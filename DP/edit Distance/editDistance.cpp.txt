/*
given 2 strings. find the min number of operations to make the string s is equal to the string s2.
You can perform insertion, delete, and update operations.
*/
#include<bits/stdc++.h>
using namespace std;
int editDistance(string s1, string s2, int n1, int n2){
    if(n1 == 0)return n2;
    if(n2 ==0)return n1;
    if(s1[n1-1] == s2[n2-1]){
        return editDistance(s1, s2, n1-1, n2-1);
    }
    else{
        return 1 + min(editDistance(s1, s2, n1, n2-1), min(editDistance(s1, s2, n1-1, n2), editDistance(s1, s2, n1-1, n2-1)));
    }
}

int editDistanceTab(string s1, string s2, int n1, int n2){
    int dp[n1+1][n2+1];
    for(int i=0; i<=n1; i++){
        dp[i][0] = i;
    }
    for(int i=0; i<=n2; i++){
        dp[0][i] = i;
    }
    for(int i=1; i<=n1; i++){
        for(int j = 1; j<= n2; j++){
            if(s1[i-1]==s2[j-1]){
                dp[i][j] = dp[i-1][j-1];
            }
            else{
                dp[i][j] = 1 + min(dp[i-1][j],
                                    min(dp[i][j-1], dp[i-1][j-1]));
            }
        }
    }
    return dp[n1][n2];
}

int main(){
    string s1 = "saturday", s2= "sunday";
    int n1 = s1.length();
    int n2 = s2.length();
    cout << editDistance(s1, s2, n1, n2)<< endl;
        
    
}